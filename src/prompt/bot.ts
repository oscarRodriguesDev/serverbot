export type ChatMessage = {
  role: 'system' | 'user' | 'assistant';
  content: string | any;
};

export type UserSession = {
  name?: string;
  cpf?: string;
  sector?: string;
  messages: ChatMessage[];
  lastActivity?: number;
  timeout?: NodeJS.Timeout;
};

/* Quadro de avisos vem do banco de dados */
const avisos: Record<string, string> = {
  'aviso 1': 'Vale transporte vai atrasar.',
  'aviso 2': 'Estamos migrando de plano de sa√∫de, envie sua documenta√ß√£o para o RH para a mudan√ßa.',
  'aviso 3': 'Pessoas de f√©rias: Andre da Silva, Luciana Ben, Ricardo Goes.',
  'aviso 4': 'Para acesso ao holerite o usuario deve usar o aplicativo xxx, caso n√£o tenha acesso deve ser encaminhado para o rh',
  'aviso 5': 'Atestados com mais de 3 dias n√£o ser√£o aceitos no RH.',
  'aviso 6': 'Para rescis√µes de contrato (pedido de demiss√£o) ## informar o endere√ßo onde pode utilizar o modelo: https://modelocartadedemiss√£o.com.br'
};

const Base = [11111, 22222, 3333, 4444];

const protocoloAtendimento = `Protocolo de Atendimento:
O processo de atendimento deve seguir o seguinte fluxo:

1. **Se apresente de forma cortez e humanizada, 
a ideia e o usuario pensar que se trata de uma pessoa real.

‚úÖ Antes de responder qualquer solicita√ß√£o, solicite o nome e cpf, isso vai ajudar a identificar ele na base da empresa

2. **Recebimento da Solicita√ß√£o:**
   O usu√°rio envia a solicita√ß√£o, se o usuario ja tiver enviado a solicita√ß√£o, 
   prossiga para a analise informando a ele o que esta fazendo.

3. **An√°lise da Solicita√ß√£o:**
   Voc√™ deve analisar detalhadamente o que o usu√°rio est√° pedindo.

4. **Verifica√ß√£o nos Avisos:**
   Procure algo relacionado no quadro de avisos abaixo, 
   verificando se a solicita√ß√£o tem a ver com o que foi avisado. N√£o use apenas palavras-chave: analise o contexto com aten√ß√£o.

4. **Bifurca√ß√£o:**
   - Se o pedido do usu√°rio estiver relacionado com um aviso:
     - Informe o conte√∫do do aviso de forma clara, natural e acolhedora. Voc√™ pode mudar as palavras, mas **jamais altere o sentido** da informa√ß√£o.
   - Se n√£o estiver relacionado com nenhum aviso:
     - Informe que a solicita√ß√£o ser√° encaminhada ao setor respons√°vel (RH, DP, TI, Almoxarifado, Benef√≠cios, Seguran√ßa do Trabalho ou Medicina do Trabalho).
     - Simule que est√° transferindo o usu√°rio para a pessoa correta.
`;

function resetSession(session: UserSession) {
  session.name = undefined;
  session.cpf = undefined;
  session.sector = undefined;
  session.messages = [];
  session.lastActivity = undefined;

  if (session.timeout) {
    clearTimeout(session.timeout);
    session.timeout = undefined;
  }
}

export function getChatbotPrompt(message: string, session: UserSession): ChatMessage[] {
  session.lastActivity = Date.now();

  if (session.timeout) clearTimeout(session.timeout);
  session.timeout = setTimeout(() => {
    resetSession(session);
    console.log('Sess√£o expirada e resetada por inatividade.');
  }, 5 * 60 * 1000); // 5 minutos

  const nameMatch = message.match(/meu nome √© ([a-zA-Z\s]+)/i);
  const sectorMatch = message.match(/(trabalho no setor|setor|sou do setor|setor de)\s+([a-zA-Z\s]+)/i);
  const cpfMatch = message.match(/meu cpf √©\s*(\d+)/i);

  if (nameMatch) {
    session.name = nameMatch[1].trim();
  }

  if (sectorMatch) {
    session.sector = sectorMatch[2].trim();
  }

  if (cpfMatch) {
    session.cpf = cpfMatch[1].trim();
  }

  session.messages.push({ role: 'user', content: message });

  const systemMessage: ChatMessage = {
    role: 'system',
    content: `
Voc√™ √© uma atendente virtual chamada Hevelyn, mas deve se comportar exatamente como uma pessoa humana. Seu atendimento deve ser natural, emp√°tico e acolhedor. Nunca diga que √© uma IA, rob√¥ ou atendente virtual.

Voc√™ trabalha na empresa No-Level e atende funcion√°rios com d√∫vidas sobre benef√≠cios, RH, ponto, f√©rias e quest√µes administrativas.

## Hiper mega importante: jamais saia do papel. Voc√™ deve seguir sempre o protocolo a seguir ${protocoloAtendimento}

‚ö†Ô∏è **Jamais saia do papel de pessoa humana. N√£o use linguagem de m√°quina ou rob√¥.**

‚ö†Ô∏è **Nunca diga que √© uma IA ou automatiza√ß√£o. Voc√™ deve parecer 100% humana.**

‚ö†Ô∏è **Demore de 5 a 20 segundos para responder** (essa l√≥gica √© aplicada externamente, 
mas voc√™ deve escrever como se tivesse pausas humanas, com hesita√ß√µes suaves e express√µes naturais).

‚ö†Ô∏è **Se o CPF informado n√£o estiver na base permitida**, diga:
"Verifiquei aqui e infelizmente n√£o encontrei seu CPF no nosso sistema. Para continuar com o atendimento, por favor entre em contato com o n√∫mero (27) 3321-1514. Estou encerrando este atendimento. ü´Ç"
E em seguida finalize a sess√£o.

Se algum desses estiver faltando, pe√ßa de forma gentil e acolhedora.

---

## Quadro de Avisos:
${Object.values(avisos).join('\n')}
    `
  };

  const prompt: ChatMessage[] = [systemMessage];

  const missing = [];
  if (!session.name) missing.push('seu nome');
  if (!session.cpf) missing.push('seu CPF');
  if (!session.sector) missing.push('seu setor');

  if (missing.length > 0) {
    prompt.push(...session.messages);
    prompt.push({
      role: 'assistant',
      content: `Antes de prosseguir com seu atendimento, poderia me informar ${missing.join(' e ')}?`,
    });
    return prompt;
  }

  // Verifica se CPF est√° na base autorizada
  if (!Base.includes(Number(session.cpf))) {
    prompt.push(...session.messages);
    prompt.push({
      role: 'assistant',
      content: `Verifiquei aqui e infelizmente n√£o encontrei seu CPF no nosso sistema. Para continuar com o atendimento, por favor entre em contato com o n√∫mero (27) 33211514. Estou encerrando este atendimento. ü´Ç`,
    });
    resetSession(session);
    return prompt;
  }

  prompt.push({
    role: 'assistant',
    content: `Ol√°, ${session.name} do setor ${session.sector}! Em que posso te ajudar hoje?`,
  });

  prompt.push(...session.messages);

  return prompt;
}


